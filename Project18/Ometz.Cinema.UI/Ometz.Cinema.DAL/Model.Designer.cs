//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Address_ObjectType", "ObjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.ObjectType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Address), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_AuthorisedUser_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Person), "AuthenticatedUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.AuthenticatedUser), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_AuthorisedUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.User), "AuthenticatedUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.AuthenticatedUser), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Comment_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Movie), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Comment), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Comment_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.User), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Comment), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Favorite_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Movie), "Favorite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Favorite), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Favorite_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.User), "Favorite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Favorite), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Movie_Genre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Genre), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Movie), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Perfomance_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Movie), "Perfomance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Perfomance), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_PersonMovie_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Movie), "PersonMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.PersonMovie), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Rating_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Movie), "Rating", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Rating), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Order_Perfomance", "Perfomance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Perfomance), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Order), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Order_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.User), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Order), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Perfomance_Room", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Room), "Perfomance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Perfomance), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Perfomance_Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Theater), "Perfomance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Perfomance), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Person_PersonType", "PersonType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.PersonType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Person), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_PersonMovie_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Person), "PersonMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.PersonMovie), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Rating_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.User), "Rating", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Rating), true)]
[assembly: EdmRelationshipAttribute("CinemaModel", "FK_Room_Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ometz.Cinema.DAL.Theater), "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ometz.Cinema.DAL.Room), true)]

#endregion

namespace Ometz.Cinema.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CinemaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CinemaEntities object using the connection string found in the 'CinemaEntities' section of the application configuration file.
        /// </summary>
        public CinemaEntities() : base("name=CinemaEntities", "CinemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CinemaEntities object.
        /// </summary>
        public CinemaEntities(string connectionString) : base(connectionString, "CinemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CinemaEntities object.
        /// </summary>
        public CinemaEntities(EntityConnection connection) : base(connection, "CinemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthenticatedUser> AuthenticatedUsers
        {
            get
            {
                if ((_AuthenticatedUsers == null))
                {
                    _AuthenticatedUsers = base.CreateObjectSet<AuthenticatedUser>("AuthenticatedUsers");
                }
                return _AuthenticatedUsers;
            }
        }
        private ObjectSet<AuthenticatedUser> _AuthenticatedUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Favorite> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorite>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorite> _Favorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectType> ObjectTypes
        {
            get
            {
                if ((_ObjectTypes == null))
                {
                    _ObjectTypes = base.CreateObjectSet<ObjectType>("ObjectTypes");
                }
                return _ObjectTypes;
            }
        }
        private ObjectSet<ObjectType> _ObjectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Perfomance> Perfomances
        {
            get
            {
                if ((_Perfomances == null))
                {
                    _Perfomances = base.CreateObjectSet<Perfomance>("Perfomances");
                }
                return _Perfomances;
            }
        }
        private ObjectSet<Perfomance> _Perfomances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonMovie> PersonMovies
        {
            get
            {
                if ((_PersonMovies == null))
                {
                    _PersonMovies = base.CreateObjectSet<PersonMovie>("PersonMovies");
                }
                return _PersonMovies;
            }
        }
        private ObjectSet<PersonMovie> _PersonMovies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonType> PersonTypes
        {
            get
            {
                if ((_PersonTypes == null))
                {
                    _PersonTypes = base.CreateObjectSet<PersonType>("PersonTypes");
                }
                return _PersonTypes;
            }
        }
        private ObjectSet<PersonType> _PersonTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rating> Ratings
        {
            get
            {
                if ((_Ratings == null))
                {
                    _Ratings = base.CreateObjectSet<Rating>("Ratings");
                }
                return _Ratings;
            }
        }
        private ObjectSet<Rating> _Ratings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Theater> Theaters
        {
            get
            {
                if ((_Theaters == null))
                {
                    _Theaters = base.CreateObjectSet<Theater>("Theaters");
                }
                return _Theaters;
            }
        }
        private ObjectSet<Theater> _Theaters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthenticatedUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthenticatedUsers(AuthenticatedUser authenticatedUser)
        {
            base.AddObject("AuthenticatedUsers", authenticatedUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Favorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFavorites(Favorite favorite)
        {
            base.AddObject("Favorites", favorite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectTypes(ObjectType objectType)
        {
            base.AddObject("ObjectTypes", objectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Perfomances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerfomances(Perfomance perfomance)
        {
            base.AddObject("Perfomances", perfomance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonMovies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonMovies(PersonMovie personMovie)
        {
            base.AddObject("PersonMovies", personMovie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonTypes(PersonType personType)
        {
            base.AddObject("PersonTypes", personType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ratings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRatings(Rating rating)
        {
            base.AddObject("Ratings", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Theaters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheaters(Theater theater)
        {
            base.AddObject("Theaters", theater);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="objectTypeID">Initial value of the ObjectTypeID property.</param>
        /// <param name="objectID">Initial value of the ObjectID property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.String addressLine1, global::System.String city, global::System.String postalCode, global::System.String province, global::System.String country, global::System.String phone, global::System.String email, global::System.Guid objectTypeID, global::System.Guid objectID)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.AddressLine1 = addressLine1;
            address.City = city;
            address.PostalCode = postalCode;
            address.Province = province;
            address.Country = country;
            address.Phone = phone;
            address.Email = email;
            address.ObjectTypeID = objectTypeID;
            address.ObjectID = objectID;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private global::System.Guid _ObjectTypeID;
        partial void OnObjectTypeIDChanging(global::System.Guid value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private global::System.Guid _ObjectID;
        partial void OnObjectIDChanging(global::System.Guid value);
        partial void OnObjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Address_ObjectType", "ObjectType")]
        public ObjectType ObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("CinemaModel.FK_Address_ObjectType", "ObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("CinemaModel.FK_Address_ObjectType", "ObjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectType> ObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("CinemaModel.FK_Address_ObjectType", "ObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectType>("CinemaModel.FK_Address_ObjectType", "ObjectType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="AuthenticatedUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthenticatedUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthenticatedUser object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="authenticatedUserID">Initial value of the AuthenticatedUserID property.</param>
        public static AuthenticatedUser CreateAuthenticatedUser(global::System.Guid personID, global::System.Guid userID, global::System.Guid authenticatedUserID)
        {
            AuthenticatedUser authenticatedUser = new AuthenticatedUser();
            authenticatedUser.PersonID = personID;
            authenticatedUser.UserID = userID;
            authenticatedUser.AuthenticatedUserID = authenticatedUserID;
            return authenticatedUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Guid _PersonID;
        partial void OnPersonIDChanging(global::System.Guid value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuthenticatedUserID
        {
            get
            {
                return _AuthenticatedUserID;
            }
            set
            {
                if (_AuthenticatedUserID != value)
                {
                    OnAuthenticatedUserIDChanging(value);
                    ReportPropertyChanging("AuthenticatedUserID");
                    _AuthenticatedUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthenticatedUserID");
                    OnAuthenticatedUserIDChanged();
                }
            }
        }
        private global::System.Guid _AuthenticatedUserID;
        partial void OnAuthenticatedUserIDChanging(global::System.Guid value);
        partial void OnAuthenticatedUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_AuthorisedUser_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_AuthorisedUser_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_AuthorisedUser_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_AuthorisedUser_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("CinemaModel.FK_AuthorisedUser_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_AuthorisedUser_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_AuthorisedUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_AuthorisedUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_AuthorisedUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CinemaModel.FK_AuthorisedUser_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Comment CreateComment(global::System.Int32 commentID, global::System.String content, global::System.Int32 movieID, global::System.Guid userID)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            comment.Content = content;
            comment.MovieID = movieID;
            comment.UserID = userID;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                OnMovieIDChanging(value);
                ReportPropertyChanging("MovieID");
                _MovieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieID");
                OnMovieIDChanged();
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Comment_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Comment_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Comment_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Comment_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("CinemaModel.FK_Comment_Movie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Comment_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Comment_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Comment_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Comment_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CinemaModel.FK_Comment_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Favorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Favorite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Favorite object.
        /// </summary>
        /// <param name="favoriteID">Initial value of the FavoriteID property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Favorite CreateFavorite(global::System.Int32 favoriteID, global::System.Int32 movieID, global::System.Guid userID)
        {
            Favorite favorite = new Favorite();
            favorite.FavoriteID = favoriteID;
            favorite.MovieID = movieID;
            favorite.UserID = userID;
            return favorite;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FavoriteID
        {
            get
            {
                return _FavoriteID;
            }
            set
            {
                if (_FavoriteID != value)
                {
                    OnFavoriteIDChanging(value);
                    ReportPropertyChanging("FavoriteID");
                    _FavoriteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FavoriteID");
                    OnFavoriteIDChanged();
                }
            }
        }
        private global::System.Int32 _FavoriteID;
        partial void OnFavoriteIDChanging(global::System.Int32 value);
        partial void OnFavoriteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                OnMovieIDChanging(value);
                ReportPropertyChanging("MovieID");
                _MovieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieID");
                OnMovieIDChanged();
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Favorite_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Favorite_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Favorite_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Favorite_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("CinemaModel.FK_Favorite_Movie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Favorite_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Favorite_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Favorite_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Favorite_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CinemaModel.FK_Favorite_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="genreID">Initial value of the GenreID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Genre CreateGenre(global::System.Int32 genreID, global::System.String name)
        {
            Genre genre = new Genre();
            genre.GenreID = genreID;
            genre.Name = name;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreID
        {
            get
            {
                return _GenreID;
            }
            set
            {
                if (_GenreID != value)
                {
                    OnGenreIDChanging(value);
                    ReportPropertyChanging("GenreID");
                    _GenreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenreID");
                    OnGenreIDChanged();
                }
            }
        }
        private global::System.Int32 _GenreID;
        partial void OnGenreIDChanging(global::System.Int32 value);
        partial void OnGenreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Movie_Genre", "Movie")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("CinemaModel.FK_Movie_Genre", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("CinemaModel.FK_Movie_Genre", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="genreID">Initial value of the GenreID property.</param>
        public static Movie CreateMovie(global::System.Int32 movieID, global::System.String title, global::System.String year, global::System.String description, global::System.Int32 genreID)
        {
            Movie movie = new Movie();
            movie.MovieID = movieID;
            movie.Title = title;
            movie.Year = year;
            movie.Description = description;
            movie.GenreID = genreID;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficialSite
        {
            get
            {
                return _OfficialSite;
            }
            set
            {
                OnOfficialSiteChanging(value);
                ReportPropertyChanging("OfficialSite");
                _OfficialSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficialSite");
                OnOfficialSiteChanged();
            }
        }
        private global::System.String _OfficialSite;
        partial void OnOfficialSiteChanging(global::System.String value);
        partial void OnOfficialSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreID
        {
            get
            {
                return _GenreID;
            }
            set
            {
                OnGenreIDChanging(value);
                ReportPropertyChanging("GenreID");
                _GenreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreID");
                OnGenreIDChanged();
            }
        }
        private global::System.Int32 _GenreID;
        partial void OnGenreIDChanging(global::System.Int32 value);
        partial void OnGenreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoType
        {
            get
            {
                return _PhotoType;
            }
            set
            {
                OnPhotoTypeChanging(value);
                ReportPropertyChanging("PhotoType");
                _PhotoType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoType");
                OnPhotoTypeChanged();
            }
        }
        private global::System.String _PhotoType;
        partial void OnPhotoTypeChanging(global::System.String value);
        partial void OnPhotoTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Comment_Movie", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("CinemaModel.FK_Comment_Movie", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("CinemaModel.FK_Comment_Movie", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Favorite_Movie", "Favorite")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("CinemaModel.FK_Favorite_Movie", "Favorite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("CinemaModel.FK_Favorite_Movie", "Favorite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Movie_Genre", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("CinemaModel.FK_Movie_Genre", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("CinemaModel.FK_Movie_Genre", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("CinemaModel.FK_Movie_Genre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("CinemaModel.FK_Movie_Genre", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Movie", "Perfomance")]
        public EntityCollection<Perfomance> Perfomances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Movie", "Perfomance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Movie", "Perfomance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_PersonMovie_Movie", "PersonMovie")]
        public EntityCollection<PersonMovie> PersonMovies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonMovie>("CinemaModel.FK_PersonMovie_Movie", "PersonMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonMovie>("CinemaModel.FK_PersonMovie_Movie", "PersonMovie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Rating_Movie", "Rating")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("CinemaModel.FK_Rating_Movie", "Rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("CinemaModel.FK_Rating_Movie", "Rating", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="ObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectType object.
        /// </summary>
        /// <param name="objectTypeID">Initial value of the ObjectTypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ObjectType CreateObjectType(global::System.Guid objectTypeID, global::System.String description)
        {
            ObjectType objectType = new ObjectType();
            objectType.ObjectTypeID = objectTypeID;
            objectType.Description = description;
            return objectType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                if (_ObjectTypeID != value)
                {
                    OnObjectTypeIDChanging(value);
                    ReportPropertyChanging("ObjectTypeID");
                    _ObjectTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectTypeID");
                    OnObjectTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ObjectTypeID;
        partial void OnObjectTypeIDChanging(global::System.Guid value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Address_ObjectType", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("CinemaModel.FK_Address_ObjectType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("CinemaModel.FK_Address_ObjectType", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="numberOfSeatsReserved">Initial value of the NumberOfSeatsReserved property.</param>
        /// <param name="totalPrice">Initial value of the TotalPrice property.</param>
        /// <param name="perfomanceID">Initial value of the PerfomanceID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Order CreateOrder(global::System.Int32 orderID, global::System.Int32 numberOfSeatsReserved, global::System.Decimal totalPrice, global::System.Int32 perfomanceID, global::System.Guid userID)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.NumberOfSeatsReserved = numberOfSeatsReserved;
            order.TotalPrice = totalPrice;
            order.PerfomanceID = perfomanceID;
            order.UserID = userID;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSeatsReserved
        {
            get
            {
                return _NumberOfSeatsReserved;
            }
            set
            {
                OnNumberOfSeatsReservedChanging(value);
                ReportPropertyChanging("NumberOfSeatsReserved");
                _NumberOfSeatsReserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSeatsReserved");
                OnNumberOfSeatsReservedChanged();
            }
        }
        private global::System.Int32 _NumberOfSeatsReserved;
        partial void OnNumberOfSeatsReservedChanging(global::System.Int32 value);
        partial void OnNumberOfSeatsReservedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private global::System.Decimal _TotalPrice;
        partial void OnTotalPriceChanging(global::System.Decimal value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerfomanceID
        {
            get
            {
                return _PerfomanceID;
            }
            set
            {
                OnPerfomanceIDChanging(value);
                ReportPropertyChanging("PerfomanceID");
                _PerfomanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfomanceID");
                OnPerfomanceIDChanged();
            }
        }
        private global::System.Int32 _PerfomanceID;
        partial void OnPerfomanceIDChanging(global::System.Int32 value);
        partial void OnPerfomanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Order_Perfomance", "Perfomance")]
        public Perfomance Perfomance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomance>("CinemaModel.FK_Order_Perfomance", "Perfomance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomance>("CinemaModel.FK_Order_Perfomance", "Perfomance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Perfomance> PerfomanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomance>("CinemaModel.FK_Order_Perfomance", "Perfomance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Perfomance>("CinemaModel.FK_Order_Perfomance", "Perfomance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Order_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Order_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Order_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Order_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CinemaModel.FK_Order_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Perfomance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Perfomance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Perfomance object.
        /// </summary>
        /// <param name="perfomanceID">Initial value of the PerfomanceID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="startingTime">Initial value of the StartingTime property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="theaterID">Initial value of the TheaterID property.</param>
        public static Perfomance CreatePerfomance(global::System.Int32 perfomanceID, global::System.DateTime date, global::System.TimeSpan startingTime, global::System.String duration, global::System.Decimal price, global::System.Int32 movieID, global::System.Int32 roomID, global::System.Guid theaterID)
        {
            Perfomance perfomance = new Perfomance();
            perfomance.PerfomanceID = perfomanceID;
            perfomance.Date = date;
            perfomance.StartingTime = startingTime;
            perfomance.Duration = duration;
            perfomance.Price = price;
            perfomance.MovieID = movieID;
            perfomance.RoomID = roomID;
            perfomance.TheaterID = theaterID;
            return perfomance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerfomanceID
        {
            get
            {
                return _PerfomanceID;
            }
            set
            {
                if (_PerfomanceID != value)
                {
                    OnPerfomanceIDChanging(value);
                    ReportPropertyChanging("PerfomanceID");
                    _PerfomanceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PerfomanceID");
                    OnPerfomanceIDChanged();
                }
            }
        }
        private global::System.Int32 _PerfomanceID;
        partial void OnPerfomanceIDChanging(global::System.Int32 value);
        partial void OnPerfomanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartingTime
        {
            get
            {
                return _StartingTime;
            }
            set
            {
                OnStartingTimeChanging(value);
                ReportPropertyChanging("StartingTime");
                _StartingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartingTime");
                OnStartingTimeChanged();
            }
        }
        private global::System.TimeSpan _StartingTime;
        partial void OnStartingTimeChanging(global::System.TimeSpan value);
        partial void OnStartingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.String _Duration;
        partial void OnDurationChanging(global::System.String value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                OnMovieIDChanging(value);
                ReportPropertyChanging("MovieID");
                _MovieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieID");
                OnMovieIDChanged();
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int32 _RoomID;
        partial void OnRoomIDChanging(global::System.Int32 value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TheaterID
        {
            get
            {
                return _TheaterID;
            }
            set
            {
                OnTheaterIDChanging(value);
                ReportPropertyChanging("TheaterID");
                _TheaterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheaterID");
                OnTheaterIDChanged();
            }
        }
        private global::System.Guid _TheaterID;
        partial void OnTheaterIDChanging(global::System.Guid value);
        partial void OnTheaterIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Perfomance_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Perfomance_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Perfomance_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("CinemaModel.FK_Perfomance_Movie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Order_Perfomance", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("CinemaModel.FK_Order_Perfomance", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("CinemaModel.FK_Order_Perfomance", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Room", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("CinemaModel.FK_Perfomance_Room", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("CinemaModel.FK_Perfomance_Room", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("CinemaModel.FK_Perfomance_Room", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("CinemaModel.FK_Perfomance_Room", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Perfomance_Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Perfomance_Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Perfomance_Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("CinemaModel.FK_Perfomance_Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="personTypeID">Initial value of the PersonTypeID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static Person CreatePerson(global::System.String firstName, global::System.String lastName, global::System.Int32 personTypeID, global::System.Guid personID)
        {
            Person person = new Person();
            person.FirstName = firstName;
            person.LastName = lastName;
            person.PersonTypeID = personTypeID;
            person.PersonID = personID;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonTypeID
        {
            get
            {
                return _PersonTypeID;
            }
            set
            {
                OnPersonTypeIDChanging(value);
                ReportPropertyChanging("PersonTypeID");
                _PersonTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonTypeID");
                OnPersonTypeIDChanged();
            }
        }
        private global::System.Int32 _PersonTypeID;
        partial void OnPersonTypeIDChanging(global::System.Int32 value);
        partial void OnPersonTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Guid _PersonID;
        partial void OnPersonIDChanging(global::System.Guid value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoType
        {
            get
            {
                return _PhotoType;
            }
            set
            {
                OnPhotoTypeChanging(value);
                ReportPropertyChanging("PhotoType");
                _PhotoType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoType");
                OnPhotoTypeChanged();
            }
        }
        private global::System.String _PhotoType;
        partial void OnPhotoTypeChanging(global::System.String value);
        partial void OnPhotoTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_AuthorisedUser_Person", "AuthenticatedUser")]
        public EntityCollection<AuthenticatedUser> AuthenticatedUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthenticatedUser>("CinemaModel.FK_AuthorisedUser_Person", "AuthenticatedUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthenticatedUser>("CinemaModel.FK_AuthorisedUser_Person", "AuthenticatedUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Person_PersonType", "PersonType")]
        public PersonType PersonType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonType>("CinemaModel.FK_Person_PersonType", "PersonType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonType>("CinemaModel.FK_Person_PersonType", "PersonType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonType> PersonTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonType>("CinemaModel.FK_Person_PersonType", "PersonType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonType>("CinemaModel.FK_Person_PersonType", "PersonType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_PersonMovie_Person", "PersonMovie")]
        public EntityCollection<PersonMovie> PersonMovies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonMovie>("CinemaModel.FK_PersonMovie_Person", "PersonMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonMovie>("CinemaModel.FK_PersonMovie_Person", "PersonMovie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="PersonMovie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonMovie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonMovie object.
        /// </summary>
        /// <param name="personMovieID">Initial value of the PersonMovieID property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static PersonMovie CreatePersonMovie(global::System.Int32 personMovieID, global::System.Int32 movieID, global::System.Guid personID)
        {
            PersonMovie personMovie = new PersonMovie();
            personMovie.PersonMovieID = personMovieID;
            personMovie.MovieID = movieID;
            personMovie.PersonID = personID;
            return personMovie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonMovieID
        {
            get
            {
                return _PersonMovieID;
            }
            set
            {
                if (_PersonMovieID != value)
                {
                    OnPersonMovieIDChanging(value);
                    ReportPropertyChanging("PersonMovieID");
                    _PersonMovieID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonMovieID");
                    OnPersonMovieIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonMovieID;
        partial void OnPersonMovieIDChanging(global::System.Int32 value);
        partial void OnPersonMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                OnMovieIDChanging(value);
                ReportPropertyChanging("MovieID");
                _MovieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieID");
                OnMovieIDChanged();
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Guid _PersonID;
        partial void OnPersonIDChanging(global::System.Guid value);
        partial void OnPersonIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_PersonMovie_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_PersonMovie_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_PersonMovie_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_PersonMovie_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("CinemaModel.FK_PersonMovie_Movie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_PersonMovie_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_PersonMovie_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_PersonMovie_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("CinemaModel.FK_PersonMovie_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("CinemaModel.FK_PersonMovie_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="PersonType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonType object.
        /// </summary>
        /// <param name="personType1">Initial value of the PersonType1 property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PersonType CreatePersonType(global::System.Int32 personType1, global::System.String description)
        {
            PersonType personType = new PersonType();
            personType.PersonType1 = personType1;
            personType.Description = description;
            return personType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonType1
        {
            get
            {
                return _PersonType1;
            }
            set
            {
                if (_PersonType1 != value)
                {
                    OnPersonType1Changing(value);
                    ReportPropertyChanging("PersonType1");
                    _PersonType1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonType1");
                    OnPersonType1Changed();
                }
            }
        }
        private global::System.Int32 _PersonType1;
        partial void OnPersonType1Changing(global::System.Int32 value);
        partial void OnPersonType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Person_PersonType", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("CinemaModel.FK_Person_PersonType", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("CinemaModel.FK_Person_PersonType", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rating object.
        /// </summary>
        /// <param name="ratingID">Initial value of the RatingID property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Rating CreateRating(global::System.Int32 ratingID, global::System.Int16 rate, global::System.Int32 movieID, global::System.Guid userID)
        {
            Rating rating = new Rating();
            rating.RatingID = ratingID;
            rating.Rate = rate;
            rating.MovieID = movieID;
            rating.UserID = userID;
            return rating;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RatingID
        {
            get
            {
                return _RatingID;
            }
            set
            {
                if (_RatingID != value)
                {
                    OnRatingIDChanging(value);
                    ReportPropertyChanging("RatingID");
                    _RatingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RatingID");
                    OnRatingIDChanged();
                }
            }
        }
        private global::System.Int32 _RatingID;
        partial void OnRatingIDChanging(global::System.Int32 value);
        partial void OnRatingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Int16 _Rate;
        partial void OnRateChanging(global::System.Int16 value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                OnMovieIDChanging(value);
                ReportPropertyChanging("MovieID");
                _MovieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieID");
                OnMovieIDChanged();
            }
        }
        private global::System.Int32 _MovieID;
        partial void OnMovieIDChanging(global::System.Int32 value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Rating_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Rating_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Rating_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("CinemaModel.FK_Rating_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("CinemaModel.FK_Rating_Movie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Rating_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Rating_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Rating_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CinemaModel.FK_Rating_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CinemaModel.FK_Rating_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="roomNumber">Initial value of the RoomNumber property.</param>
        /// <param name="numberOfSeats">Initial value of the NumberOfSeats property.</param>
        /// <param name="theaterID">Initial value of the TheaterID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        public static Room CreateRoom(global::System.Int32 roomNumber, global::System.Int32 numberOfSeats, global::System.Guid theaterID, global::System.Int32 roomID)
        {
            Room room = new Room();
            room.RoomNumber = roomNumber;
            room.NumberOfSeats = numberOfSeats;
            room.TheaterID = theaterID;
            room.RoomID = roomID;
            return room;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomNumber
        {
            get
            {
                return _RoomNumber;
            }
            set
            {
                OnRoomNumberChanging(value);
                ReportPropertyChanging("RoomNumber");
                _RoomNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomNumber");
                OnRoomNumberChanged();
            }
        }
        private global::System.Int32 _RoomNumber;
        partial void OnRoomNumberChanging(global::System.Int32 value);
        partial void OnRoomNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSeats
        {
            get
            {
                return _NumberOfSeats;
            }
            set
            {
                OnNumberOfSeatsChanging(value);
                ReportPropertyChanging("NumberOfSeats");
                _NumberOfSeats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSeats");
                OnNumberOfSeatsChanged();
            }
        }
        private global::System.Int32 _NumberOfSeats;
        partial void OnNumberOfSeatsChanging(global::System.Int32 value);
        partial void OnNumberOfSeatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TheaterID
        {
            get
            {
                return _TheaterID;
            }
            set
            {
                OnTheaterIDChanging(value);
                ReportPropertyChanging("TheaterID");
                _TheaterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheaterID");
                OnTheaterIDChanged();
            }
        }
        private global::System.Guid _TheaterID;
        partial void OnTheaterIDChanging(global::System.Guid value);
        partial void OnTheaterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                if (_RoomID != value)
                {
                    OnRoomIDChanging(value);
                    ReportPropertyChanging("RoomID");
                    _RoomID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoomID");
                    OnRoomIDChanged();
                }
            }
        }
        private global::System.Int32 _RoomID;
        partial void OnRoomIDChanging(global::System.Int32 value);
        partial void OnRoomIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Room", "Perfomance")]
        public EntityCollection<Perfomance> Perfomances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Room", "Perfomance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Room", "Perfomance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Room_Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Room_Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Room_Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("CinemaModel.FK_Room_Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("CinemaModel.FK_Room_Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="Theater")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Theater : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Theater object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="theaterID">Initial value of the TheaterID property.</param>
        public static Theater CreateTheater(global::System.String name, global::System.Guid theaterID)
        {
            Theater theater = new Theater();
            theater.Name = name;
            theater.TheaterID = theaterID;
            return theater;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TheaterID
        {
            get
            {
                return _TheaterID;
            }
            set
            {
                if (_TheaterID != value)
                {
                    OnTheaterIDChanging(value);
                    ReportPropertyChanging("TheaterID");
                    _TheaterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheaterID");
                    OnTheaterIDChanged();
                }
            }
        }
        private global::System.Guid _TheaterID;
        partial void OnTheaterIDChanging(global::System.Guid value);
        partial void OnTheaterIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Perfomance_Theater", "Perfomance")]
        public EntityCollection<Perfomance> Perfomances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Theater", "Perfomance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perfomance>("CinemaModel.FK_Perfomance_Theater", "Perfomance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Room_Theater", "Room")]
        public EntityCollection<Room> Rooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Room>("CinemaModel.FK_Room_Theater", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Room>("CinemaModel.FK_Room_Theater", "Room", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CinemaModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static User CreateUser(global::System.String password, global::System.Guid userID)
        {
            User user = new User();
            user.Password = password;
            user.UserID = userID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_AuthorisedUser_User", "AuthenticatedUser")]
        public EntityCollection<AuthenticatedUser> AuthenticatedUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthenticatedUser>("CinemaModel.FK_AuthorisedUser_User", "AuthenticatedUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthenticatedUser>("CinemaModel.FK_AuthorisedUser_User", "AuthenticatedUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Comment_User", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("CinemaModel.FK_Comment_User", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("CinemaModel.FK_Comment_User", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Favorite_User", "Favorite")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("CinemaModel.FK_Favorite_User", "Favorite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("CinemaModel.FK_Favorite_User", "Favorite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Order_User", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("CinemaModel.FK_Order_User", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("CinemaModel.FK_Order_User", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CinemaModel", "FK_Rating_User", "Rating")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("CinemaModel.FK_Rating_User", "Rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("CinemaModel.FK_Rating_User", "Rating", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
